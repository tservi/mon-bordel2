# coding=UTF-8

class PSObject ( object )                                                    :
	def __init__ ( self , name = None , arguments = None , comment = None)   :
		self.name 		= name
		self.arguments 	= arguments
		self.comment	= comment
		
	def out ( self )                                                         :
		ret				= ''
		if self.name is not None and self.arguments is not None :
			ret 	   += self.arguments + ' '
		if self.name is not None                                :
			ret        += self.name + ' '
		if self.comment is not None                             :
			ret        += '%' + self.comment
		if ret != ''                                            :
			ret        += '\n'
		return ret
		
class PSComment ( PSObject )                                                 :
	def __init__ ( self, comment = None )                                    :
		self.psobject = PSObject ( None, None, comment )
	
	def out ( self )                                                         :
		return self.psobject.out ()

		
class PS ( object )                                                          :
	def __init__ ( self )                                                    :
		self.comments   =[]
		self.operations =[]

	def addComment  ( self , comment )                                       :
		self.comments.append ( '%' + comment + '\n' )
		
	def addOperator ( self , name = '' , arguments = None , comment = None ) :
		line          = ''
		if arguments is not None :
			line     += arguments + ' '
		line         += name + ' '
		if comment is not None:
			line     += '% ' + comment
		self.operations.append( line + ' \n' )

	def getComments   ( self )                                               : 
		return self.comments

	def getOperations ( self )                                               : 
		return self.operations
		
	def out ( self , fileName )                                              :
		f     = open(fileName,'w+')
		lines = []
		#header
		lines.append( '%!\n' )
		#comments
		for x in self.comments:
			lines.append( x )
		#separation
		lines.append( '\n' )
		#operations
		for x in self.operations:
			lines.append( x )
		f.writelines( lines )
		f.close()



test = """		
mypsobject = PSObject ( None, None, None                         )
print mypsobject.out (                                           )
mypsobject = PSObject (                                          )
print mypsobject.out (                                           )
mypsobject = PSObject ( 'newpath'                                )
print mypsobject.out (                                           )
mypsobject = PSObject ( 'newpath', None, 'Hello'                 )
print mypsobject.out (                                           )
mypsobject = PSObject ( 'lineto', '1 inch 1 inch'                )
print mypsobject.out (                                           )
mypsobject = PSObject ( 'lineto', '1 inch 1 inch' , 'Hello'      )
print mypsobject.out (                                           )
"""

test = """
mycomment  = PSComment ( None                                    )
print mycomment.out (                                            )
mycomment  = PSComment ( 'Hello'                                 )
print mycomment.out (                                            )
"""

test = """
myPs = PS()
myPs.addComment (  ' generated by postscript.PS - python'        )
myPs.addOperator ( 'def','/inch {72 mul}',' definition de inch ' )
myPs.addOperator (                                               )
myPs.addOperator ( 'newpath'                                     )
myPs.addOperator ( 'moveto','1 inch 1 inch '                     )
myPs.addOperator ( 'lineto','7 inch 1 inch '                     )
myPs.addOperator ( 'lineto','7 inch 9 inch '                     )
myPs.addOperator ( 'lineto','1 inch 9 inch '                     )
myPs.addOperator ( 'closepath'                                   )
myPs.addOperator ( 'stroke'                                      )
myPs.addOperator ( 'showpage'                                    )
myPs.out( 'test.ps'                                              )
print myPs.getComments (                                         )
print myPs.getOperations (                                       )
"""